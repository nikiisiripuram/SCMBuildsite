@* @model WebApplication1.Models.ReleaseRequestModel

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Release Request</title>
    <style>
        body { font-family: Arial, Helvetica, sans-serif; }
        * { box-sizing: border-box; }
        fieldset { flex-flow: row wrap; align-items: center; border: 1px solid #ddd; }
        label { display: block; font-size: 15px; }
        label[for='releaseSI'], label[for='DBScripts'] { display: block; font-size: 13px; color: #726b6b; background-color: #f9f9f9; width: fit-content; }
        input, textarea, select { vertical-align: middle; padding: 5px; background-color: #fff; border: 1px solid #ddd; display: block; }
        button { padding: 10px 20px; background-color: dodgerblue; border: 1px solid #ddd; color: white; cursor: pointer; }
        button[disabled] { padding: 10px 20px; background-color: #cccccc; border: 1px solid #999999; color: #666666; cursor: not-allowed; }
        button:hover { background-color: royalblue; }
        h2 { font-weight: 400; }
        legend { font-size: 12px; }
        .fieldset { flex-direction: column; align-items: stretch; }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script type="text/javascript">
        function toggle() {
            var ele = document.getElementById("releaseSIMin");
            var ele1 = document.getElementById("releaseSIMax");
            if (ele.style.display == "block") {
                ele.style.display = "none";
                ele1.style.display = "block";
            } else {
                ele.style.display = "block";
                ele1.style.display = "none";
            }
        }

        function enableSubmit() {
            if (document.getElementById("lblEmailError").innerHTML == "" && document.getElementById("workItemsError").innerHTML == "" && document.getElementById("txtEmail").value != "" && document.getElementById("workItems").value != "") {
                document.getElementById("SubmitRequest").removeAttribute("disabled");
            }
        }

        function disableSubmit() {
            if (document.getElementById("lblEmailError").innerHTML != "" || document.getElementById("workItemsError").innerHTML != "" || document.getElementById("txtEmail").value == "" || document.getElementById("workItems").value == "") {
                document.getElementById("SubmitRequest").setAttribute("disabled", "disabled");
            }
        }

        function ValidateEmail() {
            var email = document.getElementById("txtEmail").value;
            var lblError = document.getElementById("lblEmailError");
            lblError.innerHTML = "";
            var expr = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!expr.test(email.toLowerCase()) && email != "") {
                lblError.innerHTML = "Invalid email address.";
                disableSubmit();
            } else {
                enableSubmit();
            }
        }

        function EventReset() {
            document.getElementById("workItemsHidden").value = "";
            document.getElementById("lblEmailError").innerHTML = "";
            document.getElementById("workItemsError").innerHTML = "";
            document.getElementById("releaseSIMin").innerHTML = "";
            document.getElementById("dbScripts").innerHTML = "";
            document.getElementById("dbScriptsDiv").style.display = 'none';
            document.getElementById("releaseSIDiv").style.display = 'none';
            document.getElementById("SubmitRequest").setAttribute("disabled", "disabled");
        }

        function ValidateWorkItems() {
            var workItemsInput = document.getElementById("workItems").value;
            if (workItemsInput == "") {
                document.getElementById("workItemsHidden").value = "";
                document.getElementById("releaseSIMin").innerHTML = "";
                document.getElementById("dbScripts").innerHTML = "";
                document.getElementById("workItemsError").innerHTML = "";
                document.getElementById("dbScriptsDiv").style.display = 'none';
                document.getElementById("releaseSIDiv").style.display = 'none';
                disableSubmit();
            }
            if (workItemsInput != "" && workItemsInput != document.getElementById("workItemsHidden").value) {
                var wiError = document.getElementById("workItemsError");
                wiError.innerHTML = "LOADING...";
                document.getElementById("workItemsHidden").value = workItemsInput;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ValidateWorkItems", "ReleaseRequest")',
                    data: { workItems: workItemsInput },
                    success: function (result) {
                        OnSuccess(result);
                    },
                    error: function (error) {
                        OnFailure(error.responseText);
                    }
                });
                document.activeElement.blur();
            }
        }

        function OnSuccess(result) {
            var resultArray = result;
            var wiError = document.getElementById("workItemsError");
            var dbScrpt = document.getElementById("dbScripts");
            var SI = document.getElementById("releaseSIMin");
            SI.innerHTML = "";
            dbScrpt.innerHTML = "";
            wiError.innerHTML = "";

            for (var i = 0; i < resultArray.length; i++) {
                var temp = resultArray[i].split("|||");
                if (temp[0] == "WI-INVALID" || temp[0] == "DBSRPT-INVALID") {
                    wiError.innerHTML = temp[1];
                } else {
                    if (temp[0] == "DBSRPT-VALID") {
                        dbScrpt.innerHTML = temp[1];
                        document.getElementById("dbScriptsDiv").style.display = 'inline';
                    } else if (temp[0] == "WI-SI") {
                        if (temp[1].length > 200) {
                            SI.innerHTML = temp[1].substring(0, 200) + "<a href=\"javascript:toggle()\">(More info)</a>";
                            document.getElementById("releaseSIMax").innerHTML = temp[1] + "<a href=\"javascript:toggle()\">(Hide info)</a>";
                            document.getElementById("releaseSIMax").style.display = "none";
                            document.getElementById("releaseSIMin").style.display = "block";
                        } else {
                            SI.innerHTML = temp[1];
                            document.getElementById("releaseSIMax").style.display = "none";
                        }

                        document.getElementById("releaseSIDiv").style.display = 'inline';
                    }
                    enableSubmit();
                }
            }
        }

        function OnFailure(error) {
            var wiError = document.getElementById("workItemsError");
            wiError.innerHTML = error;
        }

        function copypastetrim(evt) {
            document.getElementById("workItems").value = document.getElementById("workItems").value.replace(/[^\d,-]/g, '').replace(/\s/g, '').replace(/\,,/g, ',').replace(/,\s*$/, '');
        }

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode == 44) {
                return true
            }
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
    </script>
</head>
<body>
    <div id="finalSuccess" name="finalSuccess" style="@(Model.FinalSubmission.Equals("NOERROR") ? "" : "display:none")">
        <br /><br />
        <label for="finalSuccess" style="text-align: center;"><b>@Model.BuildLabel</b> Release request has been successfully submitted.</label><br />
        <div id="cloneTickets" name="cloneTickets" style="@(String.IsNullOrEmpty(Model.CloneTickets) ? "display:none" : "")">
            <label for="cloneTickets" style="text-align: center;">Clone Work-item(s): @Model.CloneTickets</label><br />
        </div>
        <button style="margin:auto; display:block;" onclick="window.location.href='https://qltlbbrscm02.corp.brassring.com/buildrelease/SCMActivity.asp'">Ok</button>
    </div>
    <form id="form1" method="post" onreset="EventReset()">
        <input type="hidden" id="buildLblHidden" name="buildLblHidden" value="@Model.BuildLabel" />
        <input type="hidden" id="branchHidden" name="branchHidden" value="@Model.Branch" />
        <input type="hidden" id="workItemsHidden" name="workItemsHidden" value="" />
        <div id="buildReleaseFieldset" name="buildReleaseFieldset" style="@(Model.FinalSubmission.Equals("NOERROR") ? "display:none" : "")">
            <h2>@ViewBag.Title</h2>
            <label for="submissionError" style="color: red;" style="@(String.IsNullOrEmpty(Model.FinalSubmission) ? "display:none" : "")">@Model.FinalSubmission</label>
            <fieldset>
                <legend>Required Fields</legend>
                @if (!Model.IsNonCodeRelease)
                {
                    <div>
                        <label for="Description">Branch: <b>@Model.Branch</b> </label>
                        <label for="Description">Label: <b>@Model.BuildLabel</b> </label><br />
                    </div>
                }
                else
                {
                    <div>
                        <label for="targetEnv">*Product:</label>
                        <select name="appInfo" id="appInfo">
                            <option value="Enterprise-Pipeline">Enterprise-Pipeline</option>
                            <option value="Enterprise-Utilities-Pipeline">Enterprise-Utilities-Pipeline</option>
                            <option value="TG-Web-Pipeline">TG-Web-Pipeline</option>
                            <option value="TGUtilities-Pipeline">TGUtilities-Pipeline</option>
                            <option value="Integration-Pipeline">Integration-Pipeline</option>
                            <option value="Workbench-Pipeline">Workbench-Pipeline</option>
                            <option value="Companion-Products-Pipeline">Companion-Products-Pipeline</option>
                            <option value="DIT-Pipeline">DIT-Pipeline</option>
                            <option value="DST-Pipeline">DST-Pipeline</option>
                            <option value="LeadManager">LeadManager</option>
                            <option value="XMAP-Pipeline">XMAP-Pipeline</option>
                            <option value="KRBUtilities-Pipeline">KRBUtilities-Pipeline</option>
                            <option value="Purge-Utilities-Pipeline">Purge-Utilities-Pipeline</option>
                            <option value="Reporting-Standard-Pipeline">Reporting-Standard-Pipeline</option>
                            <option value="Search-Utilities-Pipeline">Search-Utilities-Pipeline</option>
                            <option value="Scheduler-Pipeline">Scheduler-Pipeline</option>
                            <option value="SSIS-Pipeline">SSIS-Pipeline</option>
                            <option value="Two-Way-Messaging-Pipeline">Two-Way-Messaging-Pipeline</option>
                        </select><br />
                    </div>
                }

                <div>
                    <label for="Name">*Work Item(s):</label>
                    <textarea id="workItems" name="workItems" onkeyup="copypastetrim(event);" onkeypress="return isNumber(event);" onmouseout="ValidateWorkItems();" placeholder="Please enter the Work Items(s) with comma(,) separated." style="width: 700px; height: 50px;"></textarea>
                    <label id="workItemsError" style="color: red;"></label><br />
                </div>
                <div id="dbScriptsDiv" style="display:none;">
                    <label for="Name">DBScripts:</label>
                    <label for="DBScripts" name="dbScripts" id="dbScripts"></label><br />
                </div>
                <div id="releaseSIDiv" style="display:none;">
                    <label for="Name">Deployment Instructions:</label>
                    <label for="releaseSI" id="releaseSIMin"></label>
                    <label for="releaseSI" id="releaseSIMax"></label><br />
                </div>
                <div>
                    <label for="Name">*Contact email:</label>
                    <input type="text" id="txtEmail" name="txtEmail" onkeyup="ValidateEmail();" placeholder="abc@infinite.com" size="50" />
                    <label id="lblEmailError" style="color: red;"></label><br />
                </div>
                <div>
                    <label for="targetEnv">*Target to Release:</label>
                    <select name="targetEnv" id="targetEnv" multiple>
                        @foreach (var env in Model.TargetEnvs)
                        {
                            <option value="@env" @(Model.BuildLabel.ToLower().Contains("_qa_") || Model.BuildLabel.Equals("") ? "Selected" : "")>@env</option>
                        }
                    </select><br />
                </div>
                <div>
                    <button id="SubmitRequest" type="submit" value="Submit" name="submitRequest" disabled="disabled">Submit</button>
                    <button id="resetRequest" type="reset" value="Reset" name="resetRequest">Reset</button>
                </div>
            </fieldset>
        </div>
    </form>
</body>
</html>
 *@


 @model WebApplication1.Models.ReleaseRequestViewModel

@{
    // Layout = null;
    ViewBag.Title = "Release Request";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
       
        {
            padding-top: 20px;
        }

        .center-text {
            text-align: left;
        }

        .btn-custom {
            margin: auto;
            display: block;
        }

        .form-container {
            max-width: 800px;
            margin: auto;
        }

        #submissionError, #dbScriptsDiv, #releaseSIDiv {
            display: none;
        }
      
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script type="text/javascript">
        function toggle() {
            var ele = document.getElementById("releaseSIMin");
            var ele1 = document.getElementById("releaseSIMax");
            if (ele.style.display == "block") {
                ele.style.display = "none";
                ele1.style.display = "block";
            } else {
                ele.style.display = "block";
                ele1.style.display = "none";
            }
        }

        function enableSubmit() {
            if (document.getElementById("lblEmailError").innerHTML == "" && document.getElementById("workItemsError").innerHTML == "" && document.getElementById("txtEmail").value != "" && document.getElementById("workItems").value != "") {
                document.getElementById("SubmitRequest").removeAttribute("disabled");
            }
        }

        function disableSubmit() {
            if (document.getElementById("lblEmailError").innerHTML != "" || document.getElementById("workItemsError").innerHTML != "" || document.getElementById("txtEmail").value == "" || document.getElementById("workItems").value == "") {
                document.getElementById("SubmitRequest").setAttribute("disabled", "disabled");
            }
        }

        function ValidateEmail() {
            var email = document.getElementById("txtEmail").value;
            var lblError = document.getElementById("lblEmailError");
            lblError.innerHTML = "";
            var expr = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!expr.test(email.toLowerCase()) && email != "") {
                lblError.innerHTML = "Invalid email address.";
                disableSubmit();
            } else {
                enableSubmit();
            }
        }

        function EventReset() {
            document.getElementById("workItemsHidden").value = "";
            document.getElementById("lblEmailError").innerHTML = "";
            document.getElementById("workItemsError").innerHTML = "";
            document.getElementById("releaseSIMin").innerHTML = "";
            document.getElementById("dbScripts").innerHTML = "";
            document.getElementById("dbScriptsDiv").style.display = 'none';
            document.getElementById("releaseSIDiv").style.display = 'none';
            document.getElementById("SubmitRequest").setAttribute("disabled", "disabled");
        }
        function ValidateWorkItems() {
            var workItemsInput = document.getElementById("workItems").value;
            var branchElement = document.getElementById("branch"); // Correct reference to the branch element
            var branch = branchElement ? branchElement.innerText : ""; // Get the branch value (assuming it's an inner text of an element with ID 'branch')

            if (workItemsInput == "") {
                document.getElementById("workItemsHidden").value = "";
                document.getElementById("releaseSIMin").innerHTML = "";
                document.getElementById("dbScripts").innerHTML = "";
                document.getElementById("workItemsError").innerHTML = "";
                document.getElementById("dbScriptsDiv").style.display = 'none';
                document.getElementById("releaseSIDiv").style.display = 'none';
                disableSubmit();
            }
            if (workItemsInput != "" && workItemsInput != document.getElementById("workItemsHidden").value) {
                var wiError = document.getElementById("workItemsError");
                wiError.innerHTML = "LOADING...";
                document.getElementById("workItemsHidden").value = workItemsInput;
                var data = { workItems: workItemsInput, branch: branch };

                // AJAX call to validate work items
                $.ajax({
                    type: "GET",
                    url: "New/ValidateWorkItems?workItems=" + workItemsInput + "&branch=" + branch,
                    contentType: "application/json; charset=utf-8",
                    data: { workItems: workItemsInput, branch: branch }, // Stringify the data object for sending as JSON
                    success: function (response) {
                        OnSuccess(response);  // Assuming response contains the data
                    },
                    error: function (xhr, status, error) {
                        OnFailure(error);
                    }
                });

                document.activeElement.blur();
            }

            // Delegate event binding
            $("#gridViewUsers").delegate('tr', 'mouseover', function () {
                var id = $(this).data('id'); // Assuming each row has a data-id attribute
                $.ajax({
                    type: "GET",
                    url: "New/ValidateWorkItems",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ workitems: id }),
                    success: function (response) {
                        console.log("Success:", response);
                    },
                    error: function (error) {
                        console.log("Error:", error);
                    }
                });
            });
        }

        function OnSuccess(result) {
            var resultArray = result;
            var wiError = document.getElementById("workItemsError");
            var dbScrpt = document.getElementById("dbScripts");
            var SI = document.getElementById("releaseSIMin");
            SI.innerHTML = "";
            dbScrpt.innerHTML = "";
            wiError.innerHTML = "";

            for (var i = 0; i < resultArray.length; i++) {
                var temp = resultArray[i].split("|||");
                if (temp[0] == "WI-INVALID" || temp[0] == "DBSRPT-INVALID") {
                    wiError.innerHTML = temp[1];
                } else {
                    if (temp[0] == "DBSRPT-VALID") {
                        dbScrpt.innerHTML = temp[1];
                        document.getElementById("dbScriptsDiv").style.display = 'inline';
                    } else if (temp[0] == "WI-SI") {
                        if (temp[1].length > 200) {
                            SI.innerHTML = temp[1].substring(0, 200) + "<a href=\"javascript:toggle()\">(More info)</a>";
                            document.getElementById("releaseSIMax").innerHTML = temp[1] + "<a href=\"javascript:toggle()\">(Hide info)</a>";
                            document.getElementById("releaseSIMax").style.display = "none";
                            document.getElementById("releaseSIMin").style.display = "block";
                        } else {
                            SI.innerHTML = temp[1];
                            document.getElementById("releaseSIMax").style.display = "none";
                        }
                        document.getElementById("releaseSIDiv").style.display = 'inline';
                    }
                    enableSubmit();
                }
            }
        }

        function OnFailure(error) {
            var wiError = document.getElementById("workItemsError");
            wiError.innerHTML = error;
        }

        function copypastetrim(evt) {
            document.getElementById("workItems").value = document.getElementById("workItems").value.replace(/[^\d,-]/g, '').replace(/\s/g, '').replace(/\,,/g, ',').replace(/,\s*$/, '');
        }

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode == 44) {
                return true;
            }
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }


    </script>
</head>
<body>
    <label> </label>

    <div id="finalSuccess" name="finalSuccess" style="display:none;">
        <br /><br />
        <label for="finalSuccess" style="text-align: center;"><b></b> Release request has been successfully submitted.</label><br />
        <div id="cloneTickets" name="cloneTickets" style="display:none;">
            <label for="cloneTickets" style="text-align: center;">Clone Work-item(s): </label><br />
        </div>
        <button style="margin:auto; display:block;" onclick="window.location.href='https://qltlbbrscm02.corp.brassring.com/buildrelease/SCMActivity.asp'">Ok</button>
    </div>

    <form method="post" asp-action="Submit" onreset="EventReset()">
        <input type="hidden" id="workItemsHidden" name="workItemsHidden" value="" />
        <div class="container">
            <form method="post" asp-action="Submit" onreset="EventReset()" class="form-container">
                <input type="hidden" id="workItemsHidden" name="workItemsHidden" value="" />
                <div class="card">
                    <div class="card-header">
                        <h2 class="center-text">@ViewBag.Title</h2>
                    </div>
                    <div class="card-body">
                        <div id="submissionError" class="alert alert-danger" role="alert"></div>
                        <fieldset>
                            <legend>Required Fields</legend>
                            @if (ViewBag.NonCodeRelease == "NO")
                            {
                                <div class="form-group">
                                    <label>Branch: <b id="branch" name="branch">@Model.Branch</b></label><br />
                                    <label>Label: <b>@Model.BuildLabel</b></label>
                                </div>
                            }
                            else
                            {
                                <div class="form-group">
                                    <label for="appInfo">*Product:</label>
                                    <select name="appInfo" id="appInfo" class="form-control">
                                        <option value="Enterprise-Pipeline">Enterprise-Pipeline</option>
                                        <option value="Enterprise-Utilities-Pipeline">Enterprise-Utilities-Pipeline</option>
                                        <option value="TG-Web-Pipeline">TG-Web-Pipeline</option>
                                        <option value="TGUtilities-Pipeline">TGUtilities-Pipeline</option>
                                        <option value="Integration-Pipeline">Integration-Pipeline</option>
                                        <option value="Workbench-Pipeline">Workbench-Pipeline</option>
                                        <option value="Companion-Products-Pipeline">Companion-Products-Pipeline</option>
                                        <option value="DIT-Pipeline">DIT-Pipeline</option>
                                        <option value="DST-Pipeline">DST-Pipeline</option>
                                        <option value="LeadManager">LeadManager</option>
                                        <option value="XMAP-Pipeline">XMAP-Pipeline</option>
                                        <option value="KRBUtilities-Pipeline">KRBUtilities-Pipeline</option>
                                        <option value="Purge-Utilities-Pipeline">Purge-Utilities-Pipeline</option>
                                        <option value="Reporting-Standard-Pipeline">Reporting-Standard-Pipeline</option>
                                        <option value="Search-Utilities-Pipeline">Search-Utilities-Pipeline</option>
                                        <option value="Scheduler-Pipeline">Scheduler-Pipeline</option>
                                        <option value="SSIS-Pipeline">SSIS-Pipeline</option>
                                        <option value="Two-Way-Messaging-Pipeline">Two-Way-Messaging-Pipeline</option>
                                    </select>
                                </div>
                            }
                            <div class="form-group">
                                <label for="workItems">*Work Items:</label>
                                <textarea id="workItems" name="workItems"
                                          onkeyup="copypastetrim(event);"
                                          onkeypress="return isNumber(event);"
                                          onblur="ValidateWorkItems(workItems.value, branch)"
                                          placeholder="Please enter the Work Items(s) with comma(,) separated."
                                          class="form-control" style="height: 50px;"></textarea>
                                <div id="workItemsError" class="text-danger"></div>
                            </div>

                            <div class="form-group" id="dbScriptsDiv">
                                <label for="DBScripts">DBScripts:</label>
                                <label for="DBScripts" name="dbScripts" id="dbScripts" class="form-control"></label>
                            </div>

                            <div class="form-group" id="releaseSIDiv">
                                <label for="releaseSI">Deployment Instructions:</label>
                                <label for="releaseSI" id="releaseSIMin" class="form-control"></label>
                                <label for="releaseSI" id="releaseSIMax" class="form-control"></label>
                            </div>

                           @*  <div class="form-group">
                                <label for="txtEmail">*Contact email:</label>
                                <input type="email" id="txtEmail" name="txtEmail"
                                       onkeyup="ValidateEmail();"
                                       placeholder="abc@infinite.com"
                                       class="form-control" />
                                <div id="lblEmailError" class="text-danger"></div>
                            </div> *@
                            <div class="form-group">
                                <label for="txtEmail">*Contact email:</label>
                                <input type="email" id="txtEmail" name="txtEmail"
                                       value="@ViewBag.Email" onkeyup="ValidateEmail();"  placeholder="abc@infinite.com" class="form-control" />
                                <div id="lblEmailError" class="text-danger"></div>
                            </div>


                            <div class="form-group">
                                <label for="targetEnv">*Target to Release:</label>
                                <select name="targetEnv" id="targetEnv" class="form-control" multiple>
                                    <option value="QA Now">QA Now</option>
                                    <option value="One-Stg Upon QA Approval">One-Stg Upon QA Approval</option>
                                    <option value="EU-Prod Upon QA Approval">EU-Prod Upon QA Approval</option>
                                    <option value="US-Prod Upon QA Approval">US-Prod Upon QA Approval</option>
                                </select>
                            </div>

                            <div class="form-group text-center">
                                <button id="SubmitRequest" type="submit" value="Submit" name="submitRequest" class="btn btn-primary" disabled>Submit</button>
                                <button id="resetRequest" type="reset" value="Reset" name="resetRequest" class="btn btn-secondary">Reset</button>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </form>
        </div>

    </form>
</body>
</html>
